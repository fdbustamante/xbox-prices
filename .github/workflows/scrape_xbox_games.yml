name: Scrape Xbox Games and Deploy to GitHub Pages

on:
  schedule:
    # Ejecutar todos los días a las 03:00 UTC (ajusta la hora)
    - cron: '0 */1 * * *'
  workflow_dispatch: # Permite ejecutarlo manualmente

permissions:
  contents: write
  pages: write

jobs:
  # Job 1: Extracción de datos
  scrape-data:
    name: Extraer datos de juegos
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        run: python run_scraper.py
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_DEBUG: ${{ secrets.TELEGRAM_DEBUG || 'False' }}

      - name: Commit and push JSON if changed
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add public/xbox_pc_games.json 
          if git diff --staged --quiet; then
            echo "No changes to public/xbox_pc_games.json."
          else
            git commit -m "Automated update of Xbox games data"
            git push
            echo "public/xbox_pc_games.json updated and pushed."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 2: Construcción del frontend
  build-frontend:
    name: Construir frontend
    needs: scrape-data
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master  # Asegurar que recibimos los últimos cambios después del scraping

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./dist  # O ./client/dist si tu frontend está en una subcarpeta
          retention-days: 1

  # Job 3: Despliegue a GitHub Pages
  deploy-to-github-pages:
    name: Desplegar a GitHub Pages
    needs: build-frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          # Opciones adicionales (opcionales):
          # user_name: 'GitHub Actions Bot'
          # user_email: 'github-actions[bot]@users.noreply.github.com'
          # cname: tu.dominio.personalizado.com 