name: Scrape Xbox Games and Deploy to GitHub Pages

on:
  schedule:
    # Ejecutar todos los días a las 03:00 UTC (ajusta la hora)
    - cron: '0 */3 * * *'
  workflow_dispatch: # Permite ejecutarlo manualmente

permissions: # Añade esto
  contents: write
  pages: write

jobs:
  scrape-and-deploy:
    runs-on: ubuntu-latest # Los runners de GitHub suelen tener Chrome preinstalado

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # O la versión que uses y que sea compatible con tu Selenium

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt # Instalará Selenium, BeautifulSoup4, etc.
          # Selenium Manager (incluido en Selenium >= 4.6) debería manejar el ChromeDriver
          # si Chrome está disponible en el runner.

      - name: Run scraper
        run: python scrap.py # Reemplaza con el nombre de tu script
        # Selenium Manager debería descargar el ChromeDriver necesario aquí si no lo encuentra

      - name: Commit and push JSON if changed
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          # Asegúrate que la ruta al JSON sea correcta si no está en la raíz
          git add public/xbox_pc_games.json 
          if git diff --staged --quiet; then
            echo "No changes to public/xbox_pc_games.json."
          else
            git commit -m "Automated update of Xbox games data"
            git push
            echo "public/xbox_pc_games.json updated and pushed."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Pasos para el despliegue del frontend a GitHub Pages
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # O la versión de Node que use tu proyecto Vite

      - name: Install frontend dependencies and build
        run: |
          npm install 
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist # O ./client/dist si tu frontend está en una subcarpeta
          # Opciones adicionales (opcionales):
          # user_name: 'GitHub Actions Bot'
          # user_email: 'github-actions[bot]@users.noreply.github.com'
          # cname: tu.dominio.personalizado.com 